# Generated by Django 4.0.2 on 2022-03-11 22:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('events', '0001_initial'), ('events', '0002_remove_feedbackform_acceptingsubmissions_and_more'), ('events', '0003_alter_feedbackform_acceptingsubmissionsuntil'), ('events', '0004_alter_feedbackform_acceptingsubmissionsuntil'), ('events', '0005_alter_questions_type_delete_questiontype'), ('events', '0006_rename_data_questions_type_data'), ('events', '0007_feedbackform_allowseditingsubmissions_and_more'), ('events', '0008_defaultfeedbackforms'), ('events', '0009_alter_event_feedback_form'), ('events', '0010_alter_event_feedback_form'), ('events', '0011_event_description'), ('events', '0012_event_topic'), ('events', '0013_event_endtime'), ('events', '0014_event_attendees'), ('events', '0015_alter_event_attendees'), ('events', '0016_alter_event_attendees'), ('events', '0017_eventrequest_details'), ('events', '0018_remove_eventrequest_details'), ('events', '0019_eventrequest_events_even_type_id_16c464_idx'), ('events', '0020_remove_eventrequest_events_even_type_id_16c464_idx_and_more'), ('events', '0021_remove_eventrequest_events_even_request_beb3ea_idx_and_more'), ('events', '0022_meetingrequest'), ('events', '0023_meetingnotes'), ('events', '0024_rename_note_meetingnotes_content'), ('events', '0025_generalfeedbackform'), ('events', '0026_generalfeedbackform_feedback'), ('events', '0027_remove_meetingnotes_mentee_and_more'), ('events', '0022_alter_event_type_alter_eventrequest_type_and_more'), ('events', '0028_merge_20220311_0043')]

    initial = True

    dependencies = [
        ('people', '0001_initial'),
        ('people', '0008_alter_user_user_type_alter_usertopic_usertype'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('startTime', models.DateTimeField()),
                ('location', models.TextField()),
                ('duration', models.IntegerField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('max_members', models.IntegerField()),
                ('min_members', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('acceptingSubmissions', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('type_data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('data', models.JSONField()),
                ('order', models.IntegerField()),
                ('required', models.BooleanField()),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.feedbackform')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.questiontype')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackSubmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.feedbackform')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('associated_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.topic')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventtype')),
            ],
        ),
        migrations.CreateModel(
            name='EventAttendee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='feedback_form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.feedbackform'),
        ),
        migrations.AddField(
            model_name='event',
            name='mentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventtype'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data', models.CharField(max_length=200)),
                ('associated_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.questions')),
                ('associated_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.feedbacksubmission')),
            ],
        ),
        migrations.AddIndex(
            model_name='eventattendee',
            index=models.Index(fields=['event', 'attendee'], name='events_even_event_i_060613_idx'),
        ),
        migrations.RemoveField(
            model_name='feedbackform',
            name='acceptingSubmissions',
        ),
        migrations.AddField(
            model_name='feedbackform',
            name='desc',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='feedbackform',
            name='acceptingSubmissionsUntil',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='questions',
            name='type',
            field=models.CharField(max_length=100),
        ),
        migrations.DeleteModel(
            name='QuestionType',
        ),
        migrations.RenameField(
            model_name='questions',
            old_name='data',
            new_name='type_data',
        ),
        migrations.AddField(
            model_name='feedbackform',
            name='allowsEditingSubmissions',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='feedbackform',
            name='allowsMultipleSubmissions',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='DefaultFeedbackForms',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.feedbackform')),
            ],
        ),
        migrations.AlterField(
            model_name='event',
            name='feedback_form',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='events.feedbackform'),
        ),
        migrations.AlterField(
            model_name='event',
            name='feedback_form',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.feedbackform'),
        ),
        migrations.AddField(
            model_name='event',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='event',
            name='topic',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.topic'),
        ),
        migrations.AddField(
            model_name='event',
            name='endTime',
            field=models.DateTimeField(default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='attendees',
            field=models.ManyToManyField(related_name='eusers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='eventrequest',
            index=models.Index(fields=['type', 'requested_by', 'associated_topic'], name='events_even_type_id_16c464_idx'),
        ),
        migrations.RemoveIndex(
            model_name='eventrequest',
            name='events_even_type_id_16c464_idx',
        ),
        migrations.AddIndex(
            model_name='eventrequest',
            index=models.Index(fields=['requested_by', 'associated_topic'], name='events_even_request_beb3ea_idx'),
        ),
        migrations.RemoveIndex(
            model_name='eventrequest',
            name='events_even_request_beb3ea_idx',
        ),
        migrations.AddConstraint(
            model_name='eventrequest',
            constraint=models.UniqueConstraint(fields=('requested_by', 'associated_topic'), name='unique_request'),
        ),
        migrations.CreateModel(
            name='MeetingRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mentor_approved', models.BooleanField()),
                ('mentee_approved', models.BooleanField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralFeedbackForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_by', to=settings.AUTH_USER_MODEL)),
                ('submitted_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_for', to=settings.AUTH_USER_MODEL)),
                ('feedback', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingNotes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=500)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='event',
            name='type',
            field=models.CharField(choices=[('Workshops', 'Workshop'), ('OneToOne', 'One to One')], max_length=50),
        ),
        migrations.AlterField(
            model_name='eventrequest',
            name='type',
            field=models.CharField(choices=[('Workshops', 'Workshop'), ('OneToOne', 'One to One')], max_length=50),
        ),
        migrations.DeleteModel(
            name='EventType',
        ),
    ]
